create database ManageSQLStudent;
use ManageSQLStudent;

CREATE TABLE SINHVIEN(
MSSV VARCHAR(20) Primary Key not null,
TENSV nvarchar(150),
SODT nvarchar(10),
LOP nvarchar(30),
DIACHI nvarchar(100)
);

INSERT INTO SINHVIEN (MSSV, TENSV, DIACHI, LOP, SODT) VALUES 
('97TH01', 'Nguyễn Văn An', '12 NTMK', '97TH01', '9688543'),
('97TH02', 'Lý An', '13/4 LCT', '97TH01', '8454433'),
('97TH03', 'Đinh Thúy Vân', '20 Pastuer', '97TH01', '8455789'),
('97TH04', 'Trần Văn Ngọc', '54/12 LHP', '97TH02', '8149023'),
('97TH05', 'Hà Khánh Ly', '12 HBT', '97TH02', '9851623'),
('97TH06', 'Nguyễn Bá Tòan', '31 THĐ', '97TH02', '9688531');

CREATE TABLE DETAI(
MSDT VARCHAR(20)  Primary Key not null,
TENDT nvarchar(150)
);

INSERT INTO DETAI (MSDT, TENDT) VALUES 
('97001', 'Quản lý thư viện'),
('97002', 'Nhận dạng vân tay'),
('97003', 'Bán đấu giá trên mạng'),
('97004', 'Quản lý siêu thị'),
('97005', 'Xử lý ảnh');

CREATE TABLE SV_DETAI (
    MSSV VARCHAR(20),
    MSDT VARCHAR(20),
    FOREIGN KEY (MSSV) REFERENCES SINHVIEN(MSSV),
    FOREIGN KEY (MSDT) REFERENCES DETAI(MSDT)
);

INSERT INTO SV_DETAI (MSSV, MSDT) VALUES 
('97TH01', '97004'),
('97TH02', '97005'),
('97TH03', '97001'),
('97TH04', '97002'),
('97TH05', '97003'),
('97TH06', '97005');

CREATE TABLE GIAOVIEN (
    MSGV INT PRIMARY KEY,
    TENGV VARCHAR(100),
    DIACHI VARCHAR(100),
    SODT VARCHAR(15),
    MSHHAM INT,
    NAMHH INT
);

INSERT INTO GIAOVIEN (MSGV, TENGV, DIACHI, SODT, MSHHAM, NAMHH) VALUES
(1, 'Trần Lan', '11 NVT', '8751515', 1, 1996),
(2, 'Nguyễn Văn A', '23/5 LQĐ', '8515186', 1, 1996),
(3, 'Lê Trung', '4 TC', '8235464', 1, 1996),
(4, 'Nguyễn Bảo Thy', '78 NTMK', '8775588', 2, 1997),
(5, 'Chu Hòai Ân', '71/4 TL', '8997859', 2, 1997),
(6, 'Nguyễn Ngọc An', '11 HBT', '8457689', 2, 1997);

CREATE TABLE HOCVI (
    MSHV INT PRIMARY KEY,
    TENHV VARCHAR(255)
);

INSERT INTO HOCVI (MSHV, TENHV) VALUES
(1, 'KS'),
(2, 'CN'),
(3, 'Th.S'),
(4, 'TS'),
(5, 'TSKH');

CREATE TABLE CHUYENNGANH (
    MSCN INT PRIMARY KEY,
    TENCN VARCHAR(255)
);

INSERT INTO CHUYENNGANH (MSCN, TENCN) VALUES
(1, 'Hệ thống thông tin'),
(2, 'Mạng'),
(3, 'Đồ họa'),
(4, 'Công nghệ phần mềm');

CREATE TABLE GV_HV_CN (
    MSGV INT,
    MSHV INT,
    MSCN INT,
    NAM INT,
    FOREIGN KEY (MSGV) REFERENCES GIAOVIEN(MSGV),
    FOREIGN KEY (MSHV) REFERENCES HOCVI(MSHV),
    FOREIGN KEY (MSCN) REFERENCES CHUYENNGANH(MSCN)
);

INSERT INTO GV_HV_CN (MSGV, MSHV, MSCN, NAM) VALUES
(1, 1, 1, 1999),
(1, 1, 2, 1999),
(1, 2, 1, 1998),
(2, 3, 2, 1997),
(3, 2, 4, 1997),
(4, 3, 2, 1996);

CREATE TABLE HOCHAM (
    MSHH INT PRIMARY KEY,
    TENHH VARCHAR(255)
);

INSERT INTO HOCHAM (MSHH, TENHH) VALUES
(1, 'Phó giáo sư'),
(2, 'Giáo sư');

CREATE TABLE GV_HDDT (
    MSGV INT,
    MSDT VARCHAR(20),
    DIEM DECIMAL(4, 2),
    FOREIGN KEY (MSGV) REFERENCES GIAOVIEN(MSGV),
    FOREIGN KEY (MSDT) REFERENCES DETAI(MSDT)
);

INSERT INTO GV_HDDT (MSGV, MSDT, DIEM) VALUES
(1, 97001, 7),
(2, 97002, 8),
(5, 97003, 9),
(4, 97004, 8.5),
(3, 97005, 7);

CREATE TABLE GV_PBDT (
    MSGV INT,
    MSDT VARCHAR(20),
    DIEM DECIMAL(4, 2),
    FOREIGN KEY (MSGV) REFERENCES GIAOVIEN(MSGV),
    FOREIGN KEY (MSDT) REFERENCES DETAI(MSDT)
);

INSERT INTO GV_PBDT (MSGV, MSDT, DIEM) VALUES
(1, '97005', 5),
(2, '97001', 7),
(5, '97004', 6),
(4, '97003', 8.5),
(3, '97002', 9);

CREATE TABLE GV_UVDT (
    MSGV INT,
    MSDT VARCHAR(20),
    DIEM DECIMAL(4, 2),
    FOREIGN KEY (MSGV) REFERENCES GIAOVIEN(MSGV),
    FOREIGN KEY (MSDT) REFERENCES DETAI(MSDT)
);

INSERT INTO GV_UVDT (MSGV, MSDT, DIEM) VALUES
(5, '97005', 6),
(2, '97005', 5),
(4, '97005', 5),
(3, '97001', 7),
(4, '97001', 7),
(5, '97001', 8),
(3, '97003', 10),
(1, '97003', 7),
(2, '97003', 7),
(1, '97004', 8),
(2, '97004', 9),
(3, '97004', 5),
(1, '97002', 9),
(4, '97002', 9),
(5, '97002', 6);

CREATE TABLE HOIDONG (
    MSHD INT PRIMARY KEY,
    PHONG VARCHAR(10),
    TGBD TIME,
    NGAYHD DATE,
    TINHTRANG VARCHAR(20),
    MSGVCTHD INT,
    FOREIGN KEY (MSGVCTHD) REFERENCES GIAOVIEN(MSGV)
);

INSERT INTO HOIDONG (MSHD, PHONG, TGBD, NGAYHD, TINHTRANG, MSGVCTHD) VALUES
(1, '002', '07:00', '2001-10-30', 'Thật', 1),
(2, '102', '07:00', '2001-10-30', 'Thử', 2),
(3, '003', '08:00', '2001-10-31', 'Thật', 3),
(4, '103', '08:00', '2001-10-31', 'Thử', 4);

CREATE TABLE HOIDONG_GV (
    MSHD INT,
    MSGV INT,
    FOREIGN KEY (MSHD) REFERENCES HOIDONG(MSHD),
    FOREIGN KEY (MSGV) REFERENCES GIAOVIEN(MSGV)
);

INSERT INTO HOIDONG_GV (MSHD, MSGV) VALUES
(1, 1),
(1, 2),
(1, 3),
(1, 4),
(2, 3),
(2, 2),
(2, 5),
(2, 4),
(3, 1),
(3, 2),
(3, 3),
(3, 4),
(4, 3),
(4, 2),
(4, 5),
(4, 4);

CREATE TABLE HOIDONG_DT (
    MSHD INT,
    MSDT VARCHAR(20),
    QUYETDINH VARCHAR(10),
    FOREIGN KEY (MSHD) REFERENCES HOIDONG(MSHD),
    FOREIGN KEY (MSDT) REFERENCES DETAI(MSDT)
);

INSERT INTO HOIDONG_DT (MSHD, MSDT, QUYETDINH) VALUES
(1, '97001', 'Được'),
(1, '97002', 'Được'),
(2, '97003', 'Không'),
(2, '97004', 'Không'),
(1, '97005', 'Được'),
(3, '97001', 'Không'),
(3, '97002', 'Được'),
(3, '97004', 'Không'),
(4, '97003', 'Không'),
(4, '97005', 'Không');

SELECT 
    D.TENDT AS 'Tên đề tài',
    SV.TENSV AS 'Tên sinh viên tham gia',
    GV_HV.TENGV AS 'Tên giáo viên hướng dẫn',
    GV_PB.TENGV AS 'Tên giáo viên phản biện'
FROM 
    SV_DETAI AS SV_DT
JOIN 
    DETAI AS D ON SV_DT.MSDT = D.MSDT
JOIN 
    SINHVIEN AS SV ON SV_DT.MSSV = SV.MSSV
LEFT JOIN 
    GV_HDDT AS GV_HV ON D.MSDT = GV_HV.MSDT
LEFT JOIN 
    GV_PBDT AS GV_PB ON D.MSDT = GV_PB.MSDT;

SELECT GIAOVIEN.TENGV, DETAI.TENDT
FROM GIAOVIEN
JOIN GV_HDDT ON GIAOVIEN.MSGV = GV_HDDT.MSGV
JOIN DETAI ON GV_HDDT.MSDT = DETAI.MSDT;

SELECT GIAOVIEN.TENGV, DETAI.TENDT AS TenDeTaiPhanBien
FROM GIAOVIEN
JOIN HOIDONG_GV ON GIAOVIEN.MSGV = HOIDONG_GV.MSGV
JOIN HOIDONG_DT ON HOIDONG_GV.MSHD = HOIDONG_DT.MSHD
JOIN DETAI ON HOIDONG_DT.MSDT = DETAI.MSDT
WHERE HOIDONG_DT.QUYETDINH = 'Không';

SELECT HOIDONG.MSHD, DETAI.TENDT AS TenDeTai, HOIDONG_DT.QUYETDINH
FROM HOIDONG
JOIN HOIDONG_DT ON HOIDONG.MSHD = HOIDONG_DT.MSHD
JOIN DETAI ON HOIDONG_DT.MSDT = DETAI.MSDT
WHERE HOIDONG.PHONG LIKE '%03' AND HOIDONG_DT.QUYETDINH IN ('Thử', 'Không');

SELECT HOIDONG.MSHD, DETAI.TENDT AS TenDeTai, AVG(GV_HDDT.DIEM) AS DIEMTB
FROM HOIDONG
JOIN HOIDONG_DT ON HOIDONG.MSHD = HOIDONG_DT.MSHD
JOIN DETAI ON HOIDONG_DT.MSDT = DETAI.MSDT
JOIN GV_HDDT ON HOIDONG_DT.MSDT = GV_HDDT.MSDT
WHERE HOIDONG.TINHTRANG = 'Thật'
GROUP BY HOIDONG.MSHD, DETAI.TENDT;

SELECT DETAI.TENDT AS TenDeTai, SINHVIEN.TENSV AS TenSinhVien, 
       GIAOVIEN.TENGV AS TenGiaoVien, GV_HDDT.DIEM AS Diem
FROM DETAI
JOIN SV_DETAI ON DETAI.MSDT = SV_DETAI.MSDT
JOIN SINHVIEN ON SV_DETAI.MSSV = SINHVIEN.MSSV
JOIN GV_HDDT ON DETAI.MSDT = GV_HDDT.MSDT
JOIN GIAOVIEN ON GV_HDDT.MSGV = GIAOVIEN.MSGV;

SELECT HOIDONG.TGBD AS ThoiGian, HOIDONG.NGAYHD AS Ngay, 
       COUNT(HOIDONG_DT.MSDT) AS SoLuongDeTai, 
       GIAOVIEN.TENGV AS TenChuTich
FROM HOIDONG
JOIN GIAOVIEN ON HOIDONG.MSGVCTHD = GIAOVIEN.MSGV
LEFT JOIN HOIDONG_DT ON HOIDONG.MSHD = HOIDONG_DT.MSHD
GROUP BY HOIDONG.MSHD, HOIDONG.TGBD, HOIDONG.NGAYHD, GIAOVIEN.TENGV;

SELECT DISTINCT HOIDONG.MSHD, GIAOVIEN.TENGV AS TenGiaoVien, GIAOVIEN.SODT AS SoDienThoai
FROM HOIDONG
JOIN HOIDONG_GV ON HOIDONG.MSHD = HOIDONG_GV.MSHD
JOIN GIAOVIEN ON HOIDONG_GV.MSGV = GIAOVIEN.MSGV;

-- 1. Thêm thông tin giáo viên với kiểm tra MSHH tồn tại
CREATE PROCEDURE Insert_GiaoVien_With_CheckHH(
    @p_MSGV INT,
    @p_TENGV VARCHAR(100),
    @p_DIACHI VARCHAR(100),
    @p_SODT VARCHAR(15),
    @p_MSHHAM INT,
    @p_NAMHH INT
)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM HOCHAM WHERE MSHH = @p_MSHHAM)
    BEGIN
        INSERT INTO GIAOVIEN(MSGV, TENGV, DIACHI, SODT, MSHHAM, NAMHH)
        VALUES (@p_MSGV, @p_TENGV, @p_DIACHI, @p_SODT, @p_MSHHAM, @p_NAMHH);
        SELECT 1 AS Result;
    END
    ELSE
    BEGIN
        SELECT 0 AS Result;
    END
END;
GO

-- 2. Thêm thông tin giáo viên với kiểm tra trùng MSGV
CREATE PROCEDURE Insert_GiaoVien_With_CheckMSGV(
    @p_MSGV INT,
    @p_TENGV VARCHAR(100),
    @p_DIACHI VARCHAR(100),
    @p_SODT VARCHAR(15),
    @p_MSHHAM INT,
    @p_NAMHH INT
)
AS
BEGIN
    IF NOT EXISTS (SELECT 1 FROM GIAOVIEN WHERE MSGV = @p_MSGV)
    BEGIN
        INSERT INTO GIAOVIEN(MSGV, TENGV, DIACHI, SODT, MSHHAM, NAMHH)
        VALUES (@p_MSGV, @p_TENGV, @p_DIACHI, @p_SODT, @p_MSHHAM, @p_NAMHH);
        SELECT 1 AS Result;
    END
    ELSE
    BEGIN
        SELECT 0 AS Result;
    END
END;
GO

-- 3. Thêm thông tin giáo viên với kiểm tra trùng MSGV và tồn tại MSHH
CREATE PROCEDURE Insert_GiaoVien_With_CheckBoth(
    @p_MSGV INT,
    @p_TENGV VARCHAR(100),
    @p_DIACHI VARCHAR(100),
    @p_SODT VARCHAR(15),
    @p_MSHHAM INT,
    @p_NAMHH INT
)
AS
BEGIN
    IF NOT EXISTS (SELECT 1 FROM GIAOVIEN WHERE MSGV = @p_MSGV) AND EXISTS (SELECT 1 FROM HOCHAM WHERE MSHH = @p_MSHHAM)
    BEGIN
        INSERT INTO GIAOVIEN(MSGV, TENGV, DIACHI, SODT, MSHHAM, NAMHH)
        VALUES (@p_MSGV, @p_TENGV, @p_DIACHI, @p_SODT, @p_MSHHAM, @p_NAMHH);
        SELECT 1 AS Result;
    END
    ELSE
    BEGIN
        SELECT 0 AS Result;
    END
END;
GO

-- 4. Cập nhật TENDETAI với MSDT cũ
CREATE PROCEDURE Update_TenDeTai(
    @p_MSDT VARCHAR(20),
    @p_TENDT_NEW NVARCHAR(150)
)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM DETAI WHERE MSDT = @p_MSDT)
    BEGIN
        UPDATE DETAI SET TENDT = @p_TENDT_NEW WHERE MSDT = @p_MSDT;
        SELECT 1 AS Result;
    END
    ELSE
    BEGIN
        SELECT 0 AS Result;
    END
END;
GO

-- 5. Cập nhật thông tin sinh viên với kiểm tra tồn tại
CREATE PROCEDURE Update_SinhVien_With_CheckExist(
    @p_MSSV VARCHAR(20),
    @p_TENSV_NEW NVARCHAR(150),
    @p_DIACHI_NEW NVARCHAR(100)
)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM SINHVIEN WHERE MSSV = @p_MSSV)
    BEGIN
        UPDATE SINHVIEN SET TENSV = @p_TENSV_NEW, DIACHI = @p_DIACHI_NEW WHERE MSSV = @p_MSSV;
        SELECT 1 AS Result;
    END
    ELSE
    BEGIN
        SELECT 0 AS Result;
    END
END;
GO

-- 6. Chuyển đổi GVHD và GVPB với MSDT cho trước
CREATE PROCEDURE Switch_GVHD_GVPB(
    @p_MSDT VARCHAR(20)
)
AS
BEGIN
    IF EXISTS (SELECT 1 FROM GV_HDDT WHERE MSDT = @p_MSDT) AND EXISTS (SELECT 1 FROM GV_PBDT WHERE MSDT = @p_MSDT)
    BEGIN
        UPDATE GV_HDDT SET MSDT = (SELECT MSDT FROM GV_PBDT WHERE MSDT = @p_MSDT) WHERE MSDT = @p_MSDT;
        UPDATE GV_PBDT SET MSDT = (SELECT MSDT FROM GV_HDDT WHERE MSDT = @p_MSDT) WHERE MSDT = @p_MSDT;
        SELECT 1 AS Result;
    END
    ELSE
    BEGIN
        SELECT 0 AS Result;
    END
END;

CREATE PROCEDURE GetNumberOfTeachersByDegree(
    @p_TENHV VARCHAR(100)
)
AS
BEGIN
    DECLARE @NumberOfTeachers INT;

    SELECT @NumberOfTeachers = COUNT(*) 
    FROM GIAOVIEN 
    WHERE TENHV = @p_TENHV;

    IF @NumberOfTeachers > 0
        SELECT @NumberOfTeachers AS NumberOfTeachers;
    ELSE
        SELECT 0 AS NumberOfTeachers;
END;
GO
CREATE PROCEDURE GetAverageScoreByMSDT(
    @p_MSDT VARCHAR(20)
)
AS
BEGIN
    DECLARE @AverageScore FLOAT;

    SELECT @AverageScore = AVG(DIEM)
    FROM DETAI
    WHERE MSDT = @p_MSDT;

    IF @AverageScore IS NOT NULL
        SELECT @AverageScore AS AverageScore;
    ELSE
        SELECT 0 AS AverageScore;
END;
GO
CREATE PROCEDURE GetPhoneNumberByTeacherName(
    @p_TENGV VARCHAR(100)
)
AS
BEGIN
    DECLARE @PhoneNumber VARCHAR(15);

    SELECT @PhoneNumber = SODT
    FROM GIAOVIEN
    WHERE TENGV = @p_TENGV;

    IF @PhoneNumber IS NOT NULL
        SELECT @PhoneNumber AS PhoneNumber;
    ELSE
        SELECT 0 AS PhoneNumber;
END;
GO
CREATE PROCEDURE GetPresidentInfoByMSHD(
    @p_MSHD INT
)
AS
BEGIN
    DECLARE @PresidentInfo NVARCHAR(255);

    SELECT @PresidentInfo = CONCAT(TENCHUT, ', ', SODT)
    FROM HOINGHI
    WHERE MSHD = @p_MSHD;

    IF @PresidentInfo IS NOT NULL
        SELECT @PresidentInfo AS PresidentInfo;
    ELSE
        SELECT 0 AS PresidentInfo;
END;
GO
CREATE PROCEDURE GetNumberOfProjectsByTeacherName(
    @p_TENGV VARCHAR(100)
)
AS
BEGIN
    DECLARE @NumberOfProjects INT;

    SELECT @NumberOfProjects = COUNT(*) 
    FROM DETAI 
    WHERE GVHD = @p_TENGV;

    IF @NumberOfProjects > 0
        SELECT @NumberOfProjects AS NumberOfProjects;
    ELSE
        SELECT 0 AS NumberOfProjects;
END;
GO

